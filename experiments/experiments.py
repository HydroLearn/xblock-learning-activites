"""
    xblock for experimenting with various components and utilities before
    inclusion in the hydrolearn platform.

    currently experimenting with nestable
"""

import datetime, json, urllib.request, urllib.error, urllib.parse, logging

from xblock.core import XBlock
from xblock.fields import (
        Scope,
        Integer,
        List,
        String,
        Boolean,
        Dict,
        Reference, # reference to another xblock
        ReferenceList, # list of references to other xblocks
    )


from xblockutils.studio_editable import (
    StudioEditableXBlockMixin,
    #StudioContainerXBlockMixin,
    StudioContainerWithNestedXBlocksMixin,
    NestedXBlockSpec,
    XBlockWithPreviewMixin,
)

from xblockutils.resources import ResourceLoader

from web_fragments.fragment import Fragment

# initialize the log
log = logging.getLogger(__name__)

# initialize the resource loader
loader = ResourceLoader(__name__)


class experiment(XBlock, StudioEditableXBlockMixin):

    display_name = String(
        display_name="Display Name",
        help="This name appears in the horizontal navigation at the top of the page",
        scope=Scope.settings,
        default="studio editable experiment"
    )

    aString = String(
        display_name="a settings string",
        scope=Scope.settings,
        help="stop thinking about it",
        default="",
    )

    aNumber = Integer(
        default=1,
        display_name="a number",
        scope=Scope.content,
        help="just a number, dont think about it",

    )

    cString = String(
        display_name="a string",
        scope=Scope.content,
        help="stop thinking about it",
        default="",
    )

    htmlstring = String(
        display_name="a BIG string",
        scope=Scope.content,
        help="stop thinking about it, big",
        default="<h1>Text block</h1><p>some default data</p>",
        multiline_editor='html'
    )

    editable_fields = [
        'display_name',
        'aString',
        'aNumber',
        'cString',
        'htmlstring',
    ]



    def student_view(self, context):

        fragment = Fragment()
        fragment.content = loader.render_template("templates/experiment-lms.html", context)

        return fragment

    def studio_view(self, context):

        fragment = Fragment()

        # load the fragment generated by the StudioEditableXBlockMixin
        #   and include it's resources/content in this component's view
        settings_fragment = super(experiment, self).studio_view(context)

        fragment.add_fragment_resources(settings_fragment)
        fragment.add_content(settings_fragment.content)

        # add the content related to this view

        fragment.add_content(loader.load_unicode("templates/experiment-cms.html"))
        fragment.add_javascript(loader.load_unicode('static/js/experiment-cms.js'))

        fragment.initialize_js('experiment_XBlock')



        # fragment.content = render_template("templates/experiment-cms.html")

        return fragment

